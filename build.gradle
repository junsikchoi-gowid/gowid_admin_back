ext {
    java_version = '1.8'
    springfox_version = '2.9.2'
    swagger_version = '1.5.22'
    profile = (!project.hasProperty('profile') || !profile) ? 'dev' : profile
}
buildscript {
    ext {
        spring_boot_version = '2.1.9.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
        classpath "io.spring.gradle:dependency-management-plugin"
    }
}
subprojects {

    group = 'com.nomadconnection.dapp'
    version = '1.2.SNAPSHOT'

    plugins.apply("java")
    plugins.apply("idea")
    plugins.apply("eclipse")
    plugins.apply("org.springframework.boot")
    plugins.apply("io.spring.dependency-management")

    sourceCompatibility = java_version

    repositories {
        mavenCentral()
    }
    test {
        useJUnitPlatform()
    }
    configurations {
        implementation {
            exclude group: "junit", module: "junit"
            if ("${profile}" == 'dev') {
                exclude module: 'gm-redis'
//                exclude module: 'gm-secukeypad'
            }
        }
        compileOnly {
            extendsFrom annotationProcessor
        }
        testCompileOnly {
            extendsFrom compileOnly
            exclude module: 'gm-secukeypad'
            exclude module: 'gm-redis'
            exclude module: 'gm-swagger'
            exclude module: 'gm-jwt'
            exclude module: 'gm-codef'
        }
        testAnnotationProcessor {
            extendsFrom annotationProcessor
        }
    }
    dependencies {
        implementation(
                "io.springfox:springfox-swagger2:$springfox_version",
                "io.springfox:springfox-swagger-ui:$springfox_version",
                "io.swagger:swagger-annotations:$swagger_version",
                "io.swagger:swagger-models:$swagger_version",
                "com.google.code.gson:gson:2.8.5"
        )
        runtimeOnly(
                "org.springframework.boot:spring-boot-devtools",
        )
        testRuntimeOnly(
                "com.h2database:h2",
                "org.junit.jupiter:junit-jupiter-engine",
        )
        annotationProcessor(
                "org.springframework.boot:spring-boot-configuration-processor",
                "org.projectlombok:lombok",
        )
        testImplementation(
                "org.springframework.boot:spring-boot-starter-test",
                "org.springframework.security:spring-security-test",
                "org.junit.jupiter:junit-jupiter-api",
                "org.mockito:mockito-core",
                "org.mockito:mockito-junit-jupiter",
        )
    }
}